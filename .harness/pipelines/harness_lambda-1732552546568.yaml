pipeline:
  identifier: Build_Krishna_hub_spec_harness_lambda_1732552554394
  name: Build harness_lambda
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1732552461282
        repoName: Krishna-hub-spec/harness_lambda
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: setupvirtualenvironment
                  name: setup virtual environment
                  spec:
                    command: |-
                      python3 -m venv .venv
                      . .venv/bin/activate
                      python3 -m pip install -r requirements.txt
                      python3 -m pip install -e .
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  name: Install Dependencies
                  identifier: Install_Dependencies
                  spec:
                    shell: Sh
                    command: |-
                      python3 -m pip install -r requirements.txt
                      python3 -m pip install -e .
              - step:
                  type: Run
                  name: Test
                  identifier: Test
                  spec:
                    shell: Sh
                    command: python -m unittest test_main.py
              - step:
                  type: Owasp
                  name: Owasp_1
                  identifier: Owasp_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
              - step:
                  type: Semgrep
                  name: Semgrep_1
                  identifier: Semgrep_1
                  spec:
                    target:
                      detection: auto
                      type: repository
                    advanced:
                      log:
                        level: info
                      args: {}
                    mode: orchestration
                    config: default
              - parallel:
                  - step:
                      type: Owasp
                      name: Owasp_2
                      identifier: Owasp_2
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
                  - step:
                      type: OsvScanner
                      name: OsvScanner_1
                      identifier: OsvScanner_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
              - step:
                  type: Run
                  name: Zip package
                  identifier: Zip_package
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/bash

                      # Step 1: Ensure Python environment is set up (optional if not already available)
                      python3 -m venv .venv
                      . .venv/bin/activate  # Use dot instead of source for compatibility

                      # Step 2: Create a deployment package directory
                      mkdir -p lambda_package
                      cp main.py lambda_package/

                      # Step 3: Install dependencies into the package directory
                      pip install -r requirements.txt -t lambda_package/

                      # Step 4: Create the ZIP file
                      cd lambda_package
                      zip -r ../lambda_function.zip .
                      cd ..

                      # Cleanup
                      rm -rf lambda_package
                      echo "Lambda function packaged as lambda_function.zip"
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload_1
                  identifier: ArtifactoryUpload_1
                  spec:
                    connectorRef: harnessjfrog
                    target: lambda-function.zip
                    sourcePath: lambda-generic-local
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
